# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
on:
  release:
    types: [created]

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '10.x'                # set this to the node version to use

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: npm install, build, and test
      run: |
        # Build and test the project, then
        # deploy to Azure Web App.
        npm install
        npm run build --if-present
        npm run test --if-present
    - name: 'Deploy to Azure WebApp'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Electron Builder Action
      # You may pin to the exact commit or the version.
      # uses: samuelmeuli/action-electron-builder@92327c67bc45ff7c38bf55d8aa8c4d75b7ea38e7
      uses: samuelmeuli/action-electron-builder@v1.6.0
      with:
        # GitHub authentication token
        github_token: 
        # Base64-encoded code signing certificate for macOS
        mac_certs: # optional
        # Password for decrypting `mac_certs`
        mac_certs_password: # optional
        # Whether the app should be released after a successful build
        release: # optional
        # Base64-encoded code signing certificate for Windows
        windows_certs: # optional
        # Password for decrypting `windows_certs`
        windows_certs_password: # optional
        # Directory where NPM/Yarn commands should be run
        package_root: # optional, default is .
        # Name of the optional NPM build script which is executed before `electron-builder`
        build_script_name: # optional, default is build
        # Whether the action should execute the NPM build script before running `electron-builder`
        skip_build: # optional
        # Whether to run `electron-builder` using the Vue CLI plugin instead of calling the command directly
        use_vue_cli: # optional
        # Other arguments to pass to the `electron-builder` command, e.g. configuration overrides
        args: # optional, default is 
        # Maximum number of attempts for completing the build and release step
        max_attempts: # optional, default is 1
        # Directory where `electron-builder` commands should be run
        app_root: # optional
